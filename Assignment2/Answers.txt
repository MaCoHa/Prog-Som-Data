


PLC Exercise 2.4
    can be found in 
    Incomp1.fs: lines 423 - 432

PLC Exercise 2.5
    works and outputs 34 
    can be found in 
    Program.fs: lines 21 - 26 
    and Machine.class
    
 Exercise 3.2  
    see picture Exercise3.2.jpg

BCD exercises:
    exc 2.1
            (remove "gm" if it should not be there. "g" is for "global", not returning after first match
            and "m" is for multi-line, making it possible to have multiple lines as single input)
        a: /.*(?:42).*/gm     
        b: /^(?!.*42).*/gm
        c: /^(?!.*42).*/gm              (Taking into account that number-strings should not be multi-liners)
        
    exc 2.2
        a:      The NFA has been drawn and saved in the file named "NFA.png" within this folder.
        b:      The DFA has been drawn and saved in the file named "DFA.png" within this folder.
        
        
        

### HelloLex: 

All relevant files til HelloLex can be found
in the HelloLex folder

## Question 1
the fsl file have a regular expression that parses a string
as long as it consists of single number between 0 and 9 anything
else will not be parsed only the first number.

## Question 2

# 2.1
a single hello.fs file is generated

# 2.2
from the generated repport it states that there are 3 states

## Question 3

The hello.exe is generated and runs. it can be found 
inside the folder

## Question 4

In the hello2.fsl the number endpoint is modified to ['0'-'9']*.
and when the exe runs it will recoqnizes more than one number  
The hello2.fsl .fs .exe can all be found in HelloLex folder

## Question 5

In the hello3.fsl the number endpoint is modified to 
['+''-']?(['0'-'9']*['.'])?['0'-'9']+  
and when the exe runs it will recoqnizes floation numbers
and prefixes with + or -
The hello3.fsl .fs .exe can all be found in HelloLex folder
